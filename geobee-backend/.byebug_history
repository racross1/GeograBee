exit
result
result = user_games.map {|i| {i.difficulty => i.scores[0]}}
user_games
        user_games = user.states_games 
user
user_games
result = user_games.map {|i| {i.difficulty => i.scores[0]}}
exit
user_games
user_results_obj
exit
user_results_obj
        end
            user_results_obj[i.difficulty] = i.scores[0]
 user_games.each do |i|
user_results_obj
user_games.length
user_games
exit
user_games
exit
last.scores[0].total
last.scores[0]
last.scores
last.score
last = StatesGame.last
StatesGame.last
States_Game.last
user.states_games
user.scores
user.states_games.scores
user.states_games
user = User.find(params['id'])
            }
            :pokemons => {:except => [:created_at, :updated_at]
user = render json: trainers.to_json(:include => {
rails c
exit
user.scores
user.states_games
user = User.find(params['id'])
exit
user.states_games
user.scores
user
user = User.find(params['id'])
user =         User.find(params['id'])
        User.find(params['id'])
params
exit
user.states_games
user.games
user = User.find(params["id"])
User.find(params["id"])
params
exit
rc.scores.length
rc.scores
rc.scores.totals
rc.scores
rc = User.find(11)
Score.last
Score.create(score_params)
score_params['total']
score_params
exit
states_games_params
